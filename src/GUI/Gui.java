/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import archivador.Archivo;
import archivador.FileSystem;
import archivador.Folder;
import archivador.Registro;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author usuario
 */
public class Gui extends javax.swing.JFrame {
    
    FileSystem coso;
    Registro selected;
    boolean NadaSelected = true;

    /**
     * Creates new form Gui
     */
    public Gui( FileSystem este) {
        this.coso = este;
        initComponents();
        actualizarCosos();
        BCopyVR.setEnabled(false);
        BCopyVV.setEnabled(false);
        BMover.setEnabled(false);
    }
    
    public void actualizarCosos(){
        LabelPath.setText(this.coso.Actual.path);
        DefaultListModel modelo = new DefaultListModel();
        for ( int i = 0; i < this.coso.Actual.listaCosos.size(); i++){
            modelo.addElement(this.coso.Actual.listaCosos.get(i).nombre);
        }
        lista.setModel(modelo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelPath = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        ButtonMover = new javax.swing.JButton();
        BMover = new javax.swing.JButton();
        BCopyVV = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        BCopyVR = new javax.swing.JButton();
        BLectura = new javax.swing.JButton();
        BModificar = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LabelPath.setText("path");
        getContentPane().add(LabelPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 230, 20));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/return.png"))); // NOI18N
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 40, 20));

        lista.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(lista);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 320, 170));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/next.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 40, 20));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/newDir.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 50, 30));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/newFile.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 50, 30));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrador.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 50, 30));

        ButtonMover.setText("Seleccionar");
        ButtonMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMoverActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonMover, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, 30));

        BMover.setText("Mover Aqui");
        BMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BMoverActionPerformed(evt);
            }
        });
        getContentPane().add(BMover, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, 30));

        BCopyVV.setText("Copiar");
        BCopyVV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCopyVVActionPerformed(evt);
            }
        });
        getContentPane().add(BCopyVV, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 80, 30));

        jButton8.setText("Importar");
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 80, 30));

        BCopyVR.setText("Exportar");
        getContentPane().add(BCopyVR, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 80, 30));

        BLectura.setText("Leer");
        BLectura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BLecturaActionPerformed(evt);
            }
        });
        getContentPane().add(BLectura, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 80, 30));

        BModificar.setText("Modificar");
        BModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BModificarActionPerformed(evt);
            }
        });
        getContentPane().add(BModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 80, 30));

        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (coso.Actual.padre != null){
            coso.Actual = coso.Actual.padre;
            actualizarCosos();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int a = lista.getSelectedIndex();
        if(a != -1 && a <= coso.Actual.listaCosos.size() ){
            if (coso.Actual.listaCosos.get(a) instanceof Folder){
                coso.Actual = (Folder) coso.Actual.listaCosos.get(a);
                actualizarCosos();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        try {
            String name = reader.readLine();
            coso.createDir(name);
            actualizarCosos();
        } catch (IOException ex) {
            Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int a = lista.getSelectedIndex();
        if(a != -1 && a <= coso.Actual.listaCosos.size()){
            Registro elim = coso.Actual.listaCosos.get(a);
            System.out.println(((Archivo) elim).sectorInicial);
            coso.ReMove(elim);
            actualizarCosos();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        try {
            System.out.println("Indique el nombre del archivo:");
            String name = reader.readLine();
            System.out.println("Indique el contenido del archivo:");
            String contenido = reader.readLine();
            int tamannoArchivo=contenido.length();
            coso.createFile(name, tamannoArchivo, contenido);
            actualizarCosos();
        } catch (IOException ex) {
            Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ButtonMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMoverActionPerformed
        // TODO add your handling code here:
        int a = lista.getSelectedIndex();
        if(a != -1 && a <= coso.Actual.listaCosos.size() && NadaSelected ){
            selected = coso.Actual.listaCosos.get(a);
            NadaSelected = false;
            BCopyVR.setEnabled(true);
            BCopyVV.setEnabled(true);
            BMover.setEnabled(true);
            ButtonMover.setText("Quitar selección");
        }
        else{
            if(NadaSelected == false){
                selected = null;
                NadaSelected = true;
                BCopyVR.setEnabled(false);
                BCopyVV.setEnabled(false);
                BMover.setEnabled(false);
                ButtonMover.setText("Seleccionar");
            }
        }
    }//GEN-LAST:event_ButtonMoverActionPerformed

    private void BMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BMoverActionPerformed
        // TODO add your handling code here:
        Folder NuevoDir = coso.Actual;
        //Lo agrega al nuevo folder
        NuevoDir.listaCosos.add(selected);
        //Se elimina del folder anterior
        selected.padre.listaCosos.remove(selected);
        //Se le vincula el nuevo padre
        selected.padre = NuevoDir;
        selected.cambiarPath();
        if(NadaSelected == false){
            selected = null;
            NadaSelected = true;
            BCopyVR.setEnabled(false);
            BCopyVV.setEnabled(false);
            BMover.setEnabled(false);
            ButtonMover.setText("Seleccionar");
        }
        actualizarCosos();
    }//GEN-LAST:event_BMoverActionPerformed

    private void BCopyVVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCopyVVActionPerformed
        // TODO add your handling code here:
        /*
        int a = lista.getSelectedIndex();
        if(a != -1 && a <= coso.Actual.listaCosos.size() && coso.Actual.listaCosos.get(a) instanceof Folder){
            Folder NuevoDir = (Folder) coso.Actual.listaCosos.get(a);
            try {
                Registro copiar = (Registro) selected.clone();
                //Lo agrega al nuevo folder
                NuevoDir.listaCosos.add(copiar);
                //Se le vincula el nuevo padre
                copiar.padre = NuevoDir;
                copiar.cambiarPath();
                if(NadaSelected == false){
                    selected = null;
                    NadaSelected = true;
                    BCopyVR.setEnabled(false);
                    BCopyVV.setEnabled(false);
                    BMover.setEnabled(false);
                    ButtonMover.setText("Seleccionar");
                }
                actualizarCosos();
            } catch (CloneNotSupportedException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }*/
    }//GEN-LAST:event_BCopyVVActionPerformed

    private void BLecturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BLecturaActionPerformed
        // TODO add your handling code here:
        int a = lista.getSelectedIndex();
        if(a != -1 && a <= coso.Actual.listaCosos.size()){
            Registro leer = coso.Actual.listaCosos.get(a);
            try {
                coso.verFile((Archivo) leer);
            } catch (IOException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BLecturaActionPerformed

    private void BModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BModificarActionPerformed
        int a = lista.getSelectedIndex();
        if(a != -1 && a <= coso.Actual.listaCosos.size()){
            Registro archivo = coso.Actual.listaCosos.get(a);
            try {
                BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
                System.out.println("Indique el nuevo texto del archivo:");
                String contenido = reader.readLine();
                coso.modFILE((Archivo) archivo, contenido);
            } catch (IOException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BModificarActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        try {
            String name = reader.readLine();
            ArrayList<Registro> encontrados = coso.buscar(name);
            for(Registro r : encontrados){
                System.out.println(r.nombre);
            }
        } catch (IOException ex) {
            Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        FileSystem este = new FileSystem(3, 5);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui(este).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCopyVR;
    private javax.swing.JButton BCopyVV;
    private javax.swing.JButton BLectura;
    private javax.swing.JButton BModificar;
    private javax.swing.JButton BMover;
    private javax.swing.JButton ButtonMover;
    private javax.swing.JLabel LabelPath;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lista;
    // End of variables declaration//GEN-END:variables
}
